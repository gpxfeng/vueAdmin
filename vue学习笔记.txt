新建vue 项目 cmd  命令vue ui  创建 手动选择中勾选Router，Vuex
开启router，commit 创建，添加插件vue-cli-plugin-element,
src文件夹main.js引入element，html引入样式和组件

在根目录下建vue.config.js，cli3.0没有了build和config文件夹
3.0的代理写在vue.config.js下的devServer


安装依赖errLog(日志),permission(前端权限控制),scrollBehavior(滚动),validator(校检),
axios(ajax封装),echarts(主题),js-cookie(cookie存储插件),
Promise(异步对象),NProgress(前端轻量级web进度条)
screenfull(全屏),vue-count-to(数字滚动查件),vue-Sticky(布局),
vue-multiselect(下拉框插件)
不是主要的↓
,normalize.css(样式),vuedraggable(拖拽依赖),dropzone(文件上传插件),codemirror(在线代码编辑器)
,simplemde(富文本编辑器)
-----main.js引用
:loading="loading" 转圈加载效果


项目登录，先进src/main getToken,从ciookie中查看，没有就进入登录
登录提交admin  方法为loginByEmail，在login.js中定义路径，
访问后台auth模块AuthController/token,调用admin模块rpc下的userRest/的validate,加密前端的密码比对后端,返回生成的token。
在user.js中定义了loginByEmail,登录完token存在cookies
loginByEmail登录完毕push到首页,中间先进main.js判断token,有了再判断列表
触发user.js中的getInfo,getMenus,获取用户信息和功能列表
AG-Admin-v2.0中的axios拦截器 名字为fetch.js,
vue+elementUI做的登录系统除了单点登录代码都一个样,具体可看 https://juejin.im/post/591aa14f570c35006961acac


前后端接口文档生成器 swagger
原项目地址 https://github.com/PanJiaChen/vue-element-admin


created方法，实例化后立马调用，跟之前的init差不多
methods方法，点击，实例化，提交等方法的共同位置

$options: 用于当前 Vue 实例的初始化选项, 可以用此选项获得组件的name。
$refs： 一个对象，持有注册过 ref 特性 的所有 DOM 元素和组件实例。
$el: Vue 实例使用的根 DOM 元素。
provide & inject ：这对选项需要一起使用，允许一个祖先组件向其所有子孙后代注入一个依赖,注意不是响应式的。
注入的对象可以是个vue实例的eventBus。
$on： 组件监听自定义事件。
$emit： 组件触发自定义事件。


不要在 foreach 循环里进行元素的 remove/add 操作
remove 元素请使用 Iterator方式，如果并发操作，需要对 Iterator 对象加锁
Iterator<String> iterator = list.iterator(); <br>while (iterator.hasNext()) {
String item = iterator.next(); <br>   if (删除元素的条件) {
       iterator.remove();
   }
}


后端接收json数据要加@requestbody


redis清缓存
2.进入src/redis-cli    cd src/redis-cli
3.执行：dbsize
4.执行：flushall
5.执行：exit

spring cache框架，缓存注解@Cacheable  用在方法上表示：该方法的返回值将被缓存起来
项目中springcloud redis mybaits整合 在ace-auth模块创建RedisConfiguration配置类,在ace-admin模块的biz上添加注解@Cache(key="user{1}")
基于spring boot上的注解缓存，自带轻量级缓存管理页面。@Cache和@CacheClear比spring cache更轻量的缓存，支持单个缓存设置过期时间，可以根据前缀移除缓存。

配置文件 maxmemory-policy volatile-lru   设置过期时间


component: () => import 导致栈溢出
RangeError: Maximum call stack size exceeded
有可能问题解决的地址:https://github.com/vuejs/vue-cli/issues/2463
目前注释了vue.config.js下面的 pages 选项


exlint规则:package.json文件下eslintConfig选项，rules配置规则









目标：加入新功能
1:代码生成器功能
2:第三方登录 增加用户注册或者是管理员新增用户
3:爬虫项目引入
4:增加百度地图
5:增加系统搜索，把原生Lucene换成Elasticsearch
6:将后台系统springBoot升级版本








































public //当前文件
    static //可以放静态资源不会被打包（我放的是富文本编译器的文件后期会太慢可以换成cdn直接引入到index.html）
  src //当前项目文件
    assets //静态资源存放需要被打包
    components //组件存放处
        beforeUpload //单个图片上传组件 （基于element）
        pagination //分页插件 （基于element）
        reset //重置按钮组件
        tinyMceEditor //富文本编译器（这个是重点ts支持的vue插件当前对于我们伸手党来说比较少）
        uploadListImg //批量图片上传（基于element）
        verification //表单验证
    utils //当前项目公用方法
    views //当前项目存放地址
        aixo //当前项目ajax封装
        content //当前项目业务逻辑
        filters //当前项目过滤器
        haveNot //404页面
        layout //项目结构布局
        login //当前项目登陆页面
        method //当前项目的静态遍历存放
        store //当前项目vuex存放（不要为了用vuex而用，其实很多项目都不需要用到vuex的）
        system //权限管理相关
        typings //ts定义使用
        utils //存放其他文件（我这边存了cookie的文件）
    app.vue //全局路由页面
    main.ts //启始的js
    permission.ts //路由中转页面
    route //路由页面
    shims-tsx.d //支持jsx
    shims-vue.d //支持vue
    vue-config //vue配置
    vue-shim.d.ts //声明全局方法（ts会自动抓取.d.ts文件部分全局方法需要定义才可以使用）


